<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2019-10 on 渐行渐远</title>
    <link>/categories/2019-10/</link>
    <description>Recent content in 2019-10 on 渐行渐远</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/2019-10/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>变异性的数值特征</title>
      <link>/blog/2019/blog.013-%E5%8F%98%E5%BC%82%E6%80%A7%E7%9A%84%E6%95%B0%E5%80%BC%E7%89%B9%E5%BE%81-%E6%96%B9%E5%B7%AE.2019.10.14/</link>
      <pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/blog.013-%E5%8F%98%E5%BC%82%E6%80%A7%E7%9A%84%E6%95%B0%E5%80%BC%E7%89%B9%E5%BE%81-%E6%96%B9%E5%B7%AE.2019.10.14/</guid>
      <description>文章主要介绍通过样本方差来了解数据集变化的原理。
我们对两个数据集做观察，数据集A和数据集B：
A: 1,2,3,4,5 B: 2,3,3,3,4  对于定量数据集，最常用、也最容易理解的集中趋势测度是数据集的算数平均数。类比我们学生年代，经常谈论的班级平均分。那么，我们对数据集A、B做平均数计算：
A: 3 B: 3  两个样本集的均值都是3。接着，我们计算每个值与均值之间的差值，观察这些偏差数据：
A: (1-3),(2-3),(3-3),(4-3),(5-3) B: (2-3),(3-3),(3-3),(3-3),(4-3)  从距离的角度，我们在坐标图上做体现。数据集中的每个点跟均值的距离：
从图上可以看出，数据集A这些点是向外分散的，或者说有较大的变异。数据集B的点都集中在均值3附近，没有太大的变异。
下一步是要将这些有关偏差的信息精简为变异程度的数字度量。距离平均值的偏差有正数，也有负数，取平均值是不可取的。那么，消除偏差的负号的方法就是进行平方处理。
在统计学上，一个含有n个测量值的样本的样本方差等于距离均值的偏差平方和除以(n-1)。
方差的单位是具体单位的平方，我们再对数据做一次处理，计算样本方差的平方根。即标准差。最后，我们通过标准差认为样本值到均值之前的“典型”距离。
在整个过程中，我们通过抽象，最终使用标准差来表示样本的变异性。需要注意的是，计算样本方差的时候，分母是n-1而不是n，主要是因为在使用了n后，会降低总体方差。
参考文章：
 商务与经济统计学  </description>
    </item>
    
    <item>
      <title>如何工作和学习</title>
      <link>/blog/2019/blog.012-%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E5%92%8C%E5%AD%A6%E4%B9%A0.2019.10.08.md/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/blog.012-%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E5%92%8C%E5%AD%A6%E4%B9%A0.2019.10.08.md/</guid>
      <description>给自己的工作制定一套系统的指导体系，或者处理问题的方法。要想从无休止的重复劳动中解脱出来，就需要对重复劳动做提炼。
引文观点  Do planning before building something new. Capture this plan in a short, written document. Have a few, select people approve this plan before starting work. Send this planning document out to all engineers in the company Have everyone follow the above steps  实际应用 我特别欣赏跟别人讨论这一点，在讨论过程中，当然，我们可以获取别人对问题的处理方法。我们可以不采纳别人的建议，但我们必须知道别的解决方案。
另外一点就是记文档（write document）。文档是个人输出的产物，只有在输出的过程中，才能更深的了解问题。而且，文档也是属于个人的产物，试想一下，辛苦工作了那么长时间，换了N家工作，到头来什么都没有留下，是不是多少有点哀伤。
使用模版 模版的本质是总结和提炼，虽然是一个小bug，但也要坚持做总结，提炼发生问题的根本原因。就跟有道云笔记上的模版文件一样，里面会把通用的模块一一替你写好，你只需要完善细节就可以了。
参考文章：
Scaling Engineering Teams via Writing Things Down and Sharing - aka RFCs</description>
    </item>
    
    <item>
      <title>MySQL增量数据订阅和消费</title>
      <link>/blog/2019/blog.010-mysql%E5%A2%9E%E9%87%8F%E6%95%B0%E6%8D%AE%E8%AE%A2%E9%98%85%E5%92%8C%E6%B6%88%E8%B4%B9.2019.10.01/</link>
      <pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/blog.010-mysql%E5%A2%9E%E9%87%8F%E6%95%B0%E6%8D%AE%E8%AE%A2%E9%98%85%E5%92%8C%E6%B6%88%E8%B4%B9.2019.10.01/</guid>
      <description> 在订单交付系统中，做到保证权益数据的实时一致性非常难，很多都选择保证数据的最终一致性。在我们的生产环境中，为了保证数据的最终一致性，专门有一个微服务来处理检验异常订单、发告警通知、及时补偿修复异常订单。
我们开发了一个独立的微服务，它主要用来做遍历整个订单数据，校验每一个订单的交付流程都正常闭环的工作。如果没有完全闭环，它需要选择对应的异常处理策略进行补偿。
问题是，该微服务如何获取整个订单数据呢？方法有很多，比如：
 定期扫描订单系统的全部订单表数据。 订单系统创建一条数据总线，所有创建的订单都发布到数据总线中，微服务订阅该数据总线。 直接订阅订单系统数据表的binlog日志  概述 我们最终确定了使用方法三。这样微服务只处理增量的变更记录，忽略历史已经处理过的记录；同时，binlog就相当于一个数据总线，我们只需要订阅就可以。
这里引入文章要介绍的重点canal，主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费。以及canal-go，它是canal的go语言客户端。具体细节可以直接去链接查看。
canal的工作原理  canal 模拟 MySQL slave 的交互协议，伪装自己为 MySQL slave ，向 MySQL master 发送 dump 协议 MySQL master 收到 dump 请求，开始推送 binary log 给 slave (即 canal ) canal 解析 binary log 对象(原始为 byte 流)  canal-go的工作原理和流程  Canal连接到mysql数据库，模拟slave canal-go与Canal建立连接 数据库发生变更写入到binlog Canal向数据库发送dump请求，获取binlog并解析 canal-go向Canal请求数据库变更 Canal发送解析后的数据给canal-go canal-go收到数据，消费成功，发送回执。（可选） Canal记录消费位置。  </description>
    </item>
    
  </channel>
</rss>