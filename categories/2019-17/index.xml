<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2019-17 on 道法自然</title>
    <link>/categories/2019-17/</link>
    <description>Recent content in 2019-17 on 道法自然</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/2019-17/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>database.sql.driver</title>
      <link>/blog/2019/19-07-17-database.sql.driver/</link>
      <pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/19-07-17-database.sql.driver/</guid>
      <description>在事务操作中，要求事务的各个阶段都使用一个Conn连接。在连接被关闭之前，还需要执行rollback操作。
文章翻译了Go源码下database.sql.driver的接口规范，具体实现可以查看源码。
// 包driver定义了数据驱动要实现的接口，具体的实现会在包sql中用到。 // // 更多还是使用包sql中的代码 package driver import ( &amp;quot;context&amp;quot; &amp;quot;errors&amp;quot; &amp;quot;reflect&amp;quot; ) // Value必须是一个驱动可以处理的值、NamedValueChecker接口能够处理的类型 // 或者下面这些类型的实例 // // int64 // float64 // bool // []byte // string // time.Time // // 如果驱动支持游标，返回值可能也实现Rows接口。举例，当用户 // 执行&amp;quot;select cursor(select * from my_table) from dual&amp;quot;。 // 如果返回的Rows被Close掉了，游标指向的数据也会被Close掉。 type Value interface{} // NameValue 同时包括name和value type NamedValue struct { // 如果Name不为空，它应该被用于参数标识符，而非序号位置。 // // Name 没有符号前缀 Name string // 参数从1开始的序号位置，并且总是被设置 Ordinal int // Value是参数值 Value Value } // Driver是一个必须被各个数据库driver实现的接口 // // 数据库驱动可以实现DriverContext来访问上下文，并且只解析一次连接池的名称， // 而非每个连接都解析一次。 // type Driver interface { // Open返回数据库的一个新连接，参数name是驱动特定格式的字符串 // // Open也可以返回一个缓存的连接（之前被close掉的），但这样 // 做其实没必要。sql包为了连接重复使用维护了一个空闲连接池 // // 返回的连接一次只被一个goroutinue中使用 Open(name string) (Conn, error) } // 如果Driver实现了DriverContext接口，那么sql.</description>
    </item>
    
  </channel>
</rss>