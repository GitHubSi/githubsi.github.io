<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mongo on 渐行渐远</title>
    <link>/tags/mongo/</link>
    <description>Recent content in mongo on 渐行渐远</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/mongo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>mongo中hint的使用</title>
      <link>/blog/2019/blog.016.mongo%E4%B8%ADhint%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/blog.016.mongo%E4%B8%ADhint%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>mongo官方文档对hint的解释如下：
 The $hint operator forces the query optimizer to use a specific index to fulfill the query. Specify the index either by the index name or by document.
 hint的命令行用法：
db.users.find().hint()  mongo中使用explain来确定查询使用的索引方案，对比explain的结果，可以反向校验hint的使用。explain的命令行用法:
db.collection.explain()  github.com/globalsign/mgo下对hint方法的注释如下：
// Hint will include an explicit &amp;quot;hint&amp;quot; in the query to force the server // to use a specified index, potentially improving performance in some // situations. The provided parameters are the fields that compose the // key of the index to be used.</description>
    </item>
    
    <item>
      <title>mongo中ObjectId</title>
      <link>/blog/2019/19-06-11-mongo%E4%B8%ADobjectid/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/19-06-11-mongo%E4%B8%ADobjectid/</guid>
      <description>ObjectId在mongo中是自动生成的_id字段，充当数据表的主键ID。按照_id排序基本上等于按照记录的创建时间排序，但还是必须注意：_id并不是严格单调递增的，前4个byte的也只是精确到了秒级，同一秒内的_id并不能保证有序。
 ObjectIds are small, likely unique, faster to generate, and ordered. ObjectId values consist of 12 bytes, where the first four bytes are a timestamp that reflect the objectId&amp;rsquo;s creation. Specifically - a 4-byte value representing the seconds since the Unix epoch - a 5-byte random value - a 3 byte counter, starting with a random value
 排序 使用github.com/globalsign/mgo的翻页逻辑：
func (detail *CounterDetailMapper) GetDetailsByDesc(ctx context.IContext, objectId string, size int, startPoint string, data *[]models.</description>
    </item>
    
  </channel>
</rss>